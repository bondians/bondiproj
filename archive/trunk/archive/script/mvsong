#!/usr/bin/env ruby

require 'rubygems'
require 'find'
require 'ruby-debug'

DEFAULT_PATH = "/Volumes/MajorTuneage/"

RAILS_ENV="production"


old = ARGV.shift  #first argument
new = ARGV.shift  #second argument
test = ARGV.shift #third argument should be nil

### if first argument is the literal "--help" then print the following simple help.
if old == "--help"
    puts "Usage:"
    puts "./script/mvsong \"/fully/qualifed/path/to/old/file\" \"/fully/qualified/path/to/new/file\""
    puts "Note: You should quote your path names to use this utility"
    exit
end

### Is there even an old file?
unless( FileTest.file?(old))
    raise "Specified file: #{old}. Does not exist."
end

### Are you overwriting a new file?
if ( FileTest.file?(new))
    raise "There is something at the specified move to location. That is no good"
end

### Force user to keep the files in the right place.
unless ((old.include? DEFAULT_PATH) && (new.include? DEFAULT_PATH))
    raise "You specified files outside of our default path. You Specified:
#{old}
#{new}" 
end


### Check if they sent more arguments.. This would likely be the result of unquoted paths.
if (test)
    raise "WTF is #{test}? Do you know what you are doing? Or do you just need to quote your paths?"
end

### Things look good, load the rails env. Wait until now for speed of checking the above.
require File.expand_path(__FILE__ + "/../../config/environment")


### Find the song in the database
song = Song.find_by_file old

if song  #did we get a song?
    pastpath = song.pastpaths.build :attributes => {:file => song.file}
    directories = new.split("/")
    directories.shift
    directories.pop
    rebuild = ""
    directories.each do |dir|
        rebuild += ("/" + dir)
        puts rebuild
        (raise "there is a real file in that path!!!") if (FileTest.file?(rebuild))
        unless (FileTest.directory?(rebuild))
            system "mkdir \"#{rebuild}\""
            system "chmod 775 \"#{rebuild}\""
            system "chown root:wheel \"#{rebuild}\""
        end
    end
    system "mv \"#{old}\" \"#{new}\""
    system "chmod 775 \"#{new}\""
    system "chown root:wheel \"#{new}\""
    song.file = new
    if ( (FileTest.file?(song.file)) && !(FileTest.file?(old)) )
        puts "Everything looks good"
        pastpath.save
        song.save
    end
else
    puts "Couldn't find your song: #{old}. Sumthin' musta happend to it man."
end
