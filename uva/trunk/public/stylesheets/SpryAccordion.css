@charset "UTF-8";

/* SpryAccordion.css - version 0.4 - Spry Pre-Release 1.6.1 */

/* Copyright (c) 2006. Adobe Systems Incorporated. All rights reserved. */

/* This is the selector for the main Accordion container. For our default style,
 * we draw borders on the left, right, and bottom. The top border of the Accordion
 * will be rendered by the first AccordionPanelTab which never moves.
 *
 * If you want to constrain the width of the Accordion widget, set a width on
 * the Accordion container. By default, our accordion expands horizontally to fill
 * up available space.
 *
 * The name of the class ("Accordion") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style the
 * Accordion container.
 */
.Accordion {
	border-left: solid 1px gray;
	border-right: solid 1px black;
	border-bottom: solid 1px gray;
	overflow: hidden;
}

/* This is the selector for the AccordionPanel container which houses the
 * panel tab and a panel content area. It doesn't render visually, but we
 * make sure that it has zero margin and padding.
 *
 * The name of the class ("AccordionPanel") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style an
 * accordion panel container.
*/
.AccordionPanel {
	margin: 0px;
	padding: 0px;
}

/* This is the selector for the AccordionPanelTab. This container houses
 * the title for the panel. This is also the container that the user clicks
 * on to open a specific panel.
 *
 * The name of the class ("AccordionPanelTab") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style an
 * accordion panel tab container.
 *
 * NOTE:
 * This rule uses -moz-user-select and -khtml-user-select properties to prevent the
 * user from selecting the text in the AccordionPanelTab. These are proprietary browser
 * properties that only work in Mozilla based browsers (like FireFox) and KHTML based
 * browsers (like Safari), so they will not pass W3C validation. If you want your documents to
 * validate, and don't care if the user can select the text within an AccordionPanelTab,
 * you can safely remove those properties without affecting the functionality of the widget.
 */
.AccordionPanelTab, .AccordionPanelTabD, .AccordionPanelTabC, .AccordionPanelTabP, .AccordionPanelTabB, .AccordionPanelTabS, .AccordionPanelTabO {
	border-top: solid 1px black;
	border-bottom: solid 1px gray;
	margin: 0px;
	padding: 2px;
	cursor: pointer;
/*	-moz-user-select: none; 
	-khtml-user-select: none; */
	overflow: hidden;
	
}
.AccordionPanelTab {
	background-color: #BBBBBB;
}
.AccordionPanelTabD {
	background-color: #6170ff;
}

.AccordionPanelTabC {
	background-color: #61ffdf;
}

.AccordionPanelTabP {
	background-color: #f6ff60;
}

.AccordionPanelTabB {
	background-color: #FFba61;
}

.AccordionPanelTabS {
	background-color: #ff6561;
}

.AccordionPanelTabO {
	background-color: #338833;
}

/* This is the selector for a Panel's Content area. It's important to note that
 * you should never put any padding on the panel's content area if you plan to
 * use the Accordions panel animations. Placing a non-zero padding on the content
 * area can cause the accordion to abruptly grow in height while the panels animate.
 *
 * Anyone who styles an Accordion *MUST* specify a height on the Accordion Panel
 * Content container.
 *
 * The name of the class ("AccordionPanelContent") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style an
 * accordion panel content container.
 */
.AccordionPanelContent {
	overflow: auto;
	margin: 0px;
	padding: 0px;
	height: 200px;
}

/* This is an example of how to change the appearance of the panel tab that is
 * currently open. The class "AccordionPanelOpen" is programatically added and removed
 * from panels as the user clicks on the tabs within the Accordion.
 */
.AccordionPanelOpen .AccordionPanelTab {
	background-color: #CCCCCC;
}

.AccordionPanelOpen .AccordionPanelTabD {
	background-color: #a0a9ff;
}

.AccordionPanelOpen .AccordionPanelTabC {
	background-color: #a0ffec;
}

.AccordionPanelOpen .AccordionPanelTabP {
	background-color: #faffa2;
}

.AccordionPanelOpen .AccordionPanelTabB {
	background-color: #ffd6a1;
}

.AccordionPanelOpen .AccordionPanelTabS {
	background-color: #ffa4a2;
}

/* This is an example of how to change the appearance of the panel tab as the
 * mouse hovers over it. The class "AccordionPanelTabHover" is programatically added
 * and removed from panel tab containers as the mouse enters and exits the tab container.
 */
.AccordionPanelTabHover {
	color: #555555;
}
.AccordionPanelOpen .AccordionPanelTabHover {
	color: #555555;
}

/* This is an example of how to change the appearance of all the panel tabs when the
 * Accordion has focus. The "AccordionFocused" class is programatically added and removed
 * whenever the Accordion gains or loses keyboard focus.
 */
.AccordionFocused .AccordionPanelTab {
	background-color: #DDDDDD;
}

.AccordionFocused .AccordionPanelTabD {
	background-color: #ced3ff;
}

.AccordionFocused .AccordionPanelTabC {
	background-color: #cdfff5;
}

.AccordionFocused .AccordionPanelTabP {
	background-color: #fcffcd;
}

.AccordionFocused .AccordionPanelTabB {
	background-color: #ffe9cd;
}

.AccordionFocused .AccordionPanelTabS {
	background-color: #ffcfce;
}

/* This is an example of how to change the appearance of the panel tab that is
 * currently open when the Accordion has focus.
 */
.AccordionFocused .AccordionPanelOpen .AccordionPanelTab {
	background-color: #EEEEEE;
}

.AccordionFocused .AccordionPanelOpen .AccordionPanelTabD {
	background-color: #f1f2ff;
}

.AccordionFocused .AccordionPanelOpen .AccordionPanelTabC {
	background-color: #f0fffc;
}

.AccordionFocused .AccordionPanelOpen .AccordionPanelTabP {
	background-color: #fefff1;
}

.AccordionFocused .AccordionPanelOpen .AccordionPanelTabB {
	background-color: #fff9f1;
}

.AccordionFocused .AccordionPanelOpen .AccordionPanelTabS {
	background-color: #fff1f1;
}

.jobdate {
	background-color: #EEE;
	width: 250px;
	margin: 2px;
	padding: 2px;
	border: 1px solid #111;
	float: right;
	text-align: right;
	-khtml-border-radius: 5px;	
	-moz-user-select: none;
	-khtml-user-select: none;
}

.currenttask {
	background-color: #EEE;
	width: 250px;
	margin: 2px;
	padding: 2px;
	border: 1px solid #111;
	float: right;
	text-align: right;	
/*	cursor: default; */
	-moz-user-select: auto;
	-khtml-user-select: auto;
	-khtml-border-radius: 5px;	
}

* html .currenttask {
	/* this is the IE css hack, do not forget it! */
	padding: 1px;
	margin: 1px;
	border: 0px;
	float: none;
}