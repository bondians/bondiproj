10:35 <@tindrum> as part of my overall plan10:36 <@tindrum> a business card will be one line item of a graphic arts order10:36 <@tindrum> an order could have several business cards on it10:36 <@tindrum> as part of my workflow, 10:36 <@tindrum> business cards need to be10:36 <@tindrum> a) sorted by quantity ordered10:37 <@tindrum> 2) output to a custom view in groups of 2010:37 <@tindrum> C) marked as done, so they don't get batched again10:37 <@tindrum> 4) be able to be un-marked, so if there's an error, we can run                  them again10:38 <@tindrum> so I think I need to have a model in between that contains a                  link to the bc, contains the quantity, 10:38 <@tindrum> is linked to the work order10:39 <@tindrum> and shows if it's been batched10:39 <@tindrum> then I need a bc_batch model10:39 <@tindrum> that finds all that are not batched, sorts by quan, chomps                  into bits of 20, and custom views those groups10:40 <@tindrum> at this point, I guess I don't care if a batch has 18 of quan.                  100, and the other 2 of quan. 50.. some people will just get                  extrasmodel business_card already exists, contains text of business card, can be refined laterhas_many :business_card_ordershas_many :business_card_batches, :through => :business_card_orderscript/generate nifty_scaffold business_card_order quantity:integer businsess_card_batch_id:integer reprint:boolean business_card_id:integerbelongs_to :business_cardbelongs_to :business_card_batchscript/generate nifty_scaffold business_card_batch quantity:integer printed:boolean batch_name:stringhas_many :business_card_ordershas_many :business_cards, :through => :business_card_order